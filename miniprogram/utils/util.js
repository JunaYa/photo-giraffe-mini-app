"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function formatTime(date) {
    const year = date.getFullYear();
    const month = date.getMonth() + 1;
    const day = date.getDate();
    const hour = date.getHours();
    const minute = date.getMinutes();
    const second = date.getSeconds();
    return [year, month, day].map(formatNumber).join('/') + ' ' + [hour, minute, second].map(formatNumber).join(':');
}
exports.formatTime = formatTime;
const formatNumber = (n) => {
    const str = n.toString();
    return str[1] ? str : '0' + str;
};
function calPictureSize(canvas, picture) {
    let width = 0;
    let height = 0;
    const canvasWidth = canvas.width;
    const canvasHeight = canvas.height;
    const pictureWidth = picture.width;
    const pictureHeight = picture.height;
    const canvasRatio = canvasWidth / canvasHeight;
    const pictureRatio = pictureWidth / pictureHeight;
    if (canvasRatio > pictureRatio) {
        width = (pictureWidth / pictureHeight) * canvasHeight;
        height = canvasHeight;
    }
    else {
        width = canvasWidth;
        height = (pictureHeight / pictureWidth) * canvasWidth;
    }
    return {
        width,
        height,
    };
}
exports.calPictureSize = calPictureSize;
function getPictureInfo(url) {
    return new Promise((resolve) => {
        wx.getImageInfo({
            src: url,
            success: data => resolve(data),
        });
    });
}
exports.getPictureInfo = getPictureInfo;
function selectPicture() {
    return new Promise((resolve) => {
        wx.chooseImage({
            count: 1,
            sourceType: ['album', 'camera'],
            sizeType: ['original', 'compressed'],
            success: (res) => {
                if (res.tempFiles.length > 0) {
                    getPictureInfo(res.tempFiles[0].path).then((info) => {
                        resolve(info);
                    });
                }
            },
        });
    });
}
exports.selectPicture = selectPicture;
function fetchPicture(path) {
    return new Promise((resolve) => {
        wx.downloadFile({
            url: path,
            success: (res) => {
                if (res.statusCode === 200) {
                    resolve(res.tempFilePath);
                }
            },
        });
    });
}
exports.fetchPicture = fetchPicture;
function getPostcards() {
    let postcards = [];
    try {
        postcards = wx.getStorageSync('postcards');
    }
    catch (e) {
    }
    return postcards || [];
}
exports.getPostcards = getPostcards;
function setPostcards(path) {
    const postcards = getPostcards();
    postcards.push(path);
    try {
        wx.setStorageSync('postcards', postcards);
    }
    catch (e) {
    }
}
exports.setPostcards = setPostcards;
exports.default = {
    formatNumber,
    formatTime,
    calPictureSize,
    getPictureInfo,
    selectPicture,
    getPostcards,
    setPostcards,
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInV0aWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxTQUFnQixVQUFVLENBQUMsSUFBVTtJQUNuQyxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUE7SUFDL0IsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUMsQ0FBQTtJQUNqQyxNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUE7SUFDMUIsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFBO0lBQzVCLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQTtJQUNoQyxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUE7SUFFaEMsT0FBTyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxJQUFJLEVBQUUsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUE7QUFDbEgsQ0FBQztBQVRELGdDQVNDO0FBRUQsTUFBTSxZQUFZLEdBQUcsQ0FBQyxDQUFTLEVBQUUsRUFBRTtJQUNqQyxNQUFNLEdBQUcsR0FBRyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUE7SUFDeEIsT0FBTyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQTtBQUNqQyxDQUFDLENBQUE7QUFFRCxTQUFnQixjQUFjLENBQUMsTUFBVyxFQUFFLE9BQVk7SUFDdEQsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDO0lBQ2QsSUFBSSxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ2YsTUFBTSxXQUFXLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUNqQyxNQUFNLFlBQVksR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO0lBQ25DLE1BQU0sWUFBWSxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUM7SUFDbkMsTUFBTSxhQUFhLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQztJQUVyQyxNQUFNLFdBQVcsR0FBRyxXQUFXLEdBQUcsWUFBWSxDQUFDO0lBQy9DLE1BQU0sWUFBWSxHQUFHLFlBQVksR0FBRyxhQUFhLENBQUM7SUFFbEQsSUFBSSxXQUFXLEdBQUcsWUFBWSxFQUFFO1FBQzlCLEtBQUssR0FBRyxDQUFDLFlBQVksR0FBRyxhQUFhLENBQUMsR0FBRyxZQUFZLENBQUM7UUFDdEQsTUFBTSxHQUFHLFlBQVksQ0FBQztLQUN2QjtTQUFNO1FBQ0wsS0FBSyxHQUFHLFdBQVcsQ0FBQztRQUNwQixNQUFNLEdBQUcsQ0FBQyxhQUFhLEdBQUcsWUFBWSxDQUFDLEdBQUcsV0FBVyxDQUFDO0tBQ3ZEO0lBQ0QsT0FBTztRQUNMLEtBQUs7UUFDTCxNQUFNO0tBQ1AsQ0FBQztBQUNKLENBQUM7QUF0QkQsd0NBc0JDO0FBRUQsU0FBZ0IsY0FBYyxDQUFDLEdBQVc7SUFDeEMsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQVksRUFBRSxFQUFFO1FBQ2xDLEVBQUUsQ0FBQyxZQUFZLENBQUM7WUFDZCxHQUFHLEVBQUUsR0FBRztZQUNSLE9BQU8sRUFBRSxJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7U0FDL0IsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDO0FBUEQsd0NBT0M7QUFFRCxTQUFnQixhQUFhO0lBQzNCLE9BQU8sSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFZLEVBQUUsRUFBRTtRQUNsQyxFQUFFLENBQUMsV0FBVyxDQUFDO1lBQ2IsS0FBSyxFQUFFLENBQUM7WUFDUixVQUFVLEVBQUUsQ0FBQyxPQUFPLEVBQUUsUUFBUSxDQUFDO1lBQy9CLFFBQVEsRUFBRSxDQUFDLFVBQVUsRUFBRSxZQUFZLENBQUM7WUFDcEMsT0FBTyxFQUFFLENBQUMsR0FBRyxFQUFFLEVBQUU7Z0JBQ2YsSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7b0JBQzVCLGNBQWMsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO3dCQUNsRCxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7b0JBQ2hCLENBQUMsQ0FBQyxDQUFDO2lCQUNKO1lBQ0gsQ0FBQztTQUNGLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQWZELHNDQWVDO0FBRUQsU0FBZ0IsWUFBWSxDQUFDLElBQVk7SUFDdkMsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQVksRUFBRSxFQUFFO1FBQ2xDLEVBQUUsQ0FBQyxZQUFZLENBQUM7WUFDZCxHQUFHLEVBQUUsSUFBSTtZQUNULE9BQU8sRUFBQyxDQUFDLEdBQUcsRUFBRSxFQUFFO2dCQUNkLElBQUksR0FBRyxDQUFDLFVBQVUsS0FBSyxHQUFHLEVBQUU7b0JBQzFCLE9BQU8sQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLENBQUM7aUJBQzNCO1lBQ0gsQ0FBQztTQUNGLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQVhELG9DQVdDO0FBRUQsU0FBZ0IsWUFBWTtJQUMxQixJQUFJLFNBQVMsR0FBRyxFQUFFLENBQUM7SUFDbkIsSUFBSTtRQUNGLFNBQVMsR0FBRyxFQUFFLENBQUMsY0FBYyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0tBQzVDO0lBQUMsT0FBTyxDQUFDLEVBQUU7S0FFWDtJQUNELE9BQU8sU0FBUyxJQUFJLEVBQUUsQ0FBQztBQUN6QixDQUFDO0FBUkQsb0NBUUM7QUFFRCxTQUFnQixZQUFZLENBQUMsSUFBWTtJQUN2QyxNQUFNLFNBQVMsR0FBRyxZQUFZLEVBQUUsQ0FBQztJQUNqQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3JCLElBQUk7UUFDRixFQUFFLENBQUMsY0FBYyxDQUFDLFdBQVcsRUFBRSxTQUFTLENBQUMsQ0FBQztLQUMzQztJQUFDLE9BQU8sQ0FBQyxFQUFFO0tBRVg7QUFDSCxDQUFDO0FBUkQsb0NBUUM7QUFFRCxrQkFBZTtJQUNiLFlBQVk7SUFDWixVQUFVO0lBQ1YsY0FBYztJQUNkLGNBQWM7SUFDZCxhQUFhO0lBQ2IsWUFBWTtJQUNaLFlBQVk7Q0FDYixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdFRpbWUoZGF0ZTogRGF0ZSk6IHN0cmluZyB7XG4gIGNvbnN0IHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKClcbiAgY29uc3QgbW9udGggPSBkYXRlLmdldE1vbnRoKCkgKyAxXG4gIGNvbnN0IGRheSA9IGRhdGUuZ2V0RGF0ZSgpXG4gIGNvbnN0IGhvdXIgPSBkYXRlLmdldEhvdXJzKClcbiAgY29uc3QgbWludXRlID0gZGF0ZS5nZXRNaW51dGVzKClcbiAgY29uc3Qgc2Vjb25kID0gZGF0ZS5nZXRTZWNvbmRzKClcblxuICByZXR1cm4gW3llYXIsIG1vbnRoLCBkYXldLm1hcChmb3JtYXROdW1iZXIpLmpvaW4oJy8nKSArICcgJyArIFtob3VyLCBtaW51dGUsIHNlY29uZF0ubWFwKGZvcm1hdE51bWJlcikuam9pbignOicpXG59XG5cbmNvbnN0IGZvcm1hdE51bWJlciA9IChuOiBudW1iZXIpID0+IHtcbiAgY29uc3Qgc3RyID0gbi50b1N0cmluZygpXG4gIHJldHVybiBzdHJbMV0gPyBzdHIgOiAnMCcgKyBzdHJcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNhbFBpY3R1cmVTaXplKGNhbnZhczogYW55LCBwaWN0dXJlOiBhbnkpOiB7d2lkdGg6IG51bWJlciwgaGVpZ2h0OiBudW1iZXJ9IHtcbiAgbGV0IHdpZHRoID0gMDtcbiAgbGV0IGhlaWdodCA9IDA7XG4gIGNvbnN0IGNhbnZhc1dpZHRoID0gY2FudmFzLndpZHRoO1xuICBjb25zdCBjYW52YXNIZWlnaHQgPSBjYW52YXMuaGVpZ2h0O1xuICBjb25zdCBwaWN0dXJlV2lkdGggPSBwaWN0dXJlLndpZHRoO1xuICBjb25zdCBwaWN0dXJlSGVpZ2h0ID0gcGljdHVyZS5oZWlnaHQ7XG5cbiAgY29uc3QgY2FudmFzUmF0aW8gPSBjYW52YXNXaWR0aCAvIGNhbnZhc0hlaWdodDtcbiAgY29uc3QgcGljdHVyZVJhdGlvID0gcGljdHVyZVdpZHRoIC8gcGljdHVyZUhlaWdodDtcblxuICBpZiAoY2FudmFzUmF0aW8gPiBwaWN0dXJlUmF0aW8pIHtcbiAgICB3aWR0aCA9IChwaWN0dXJlV2lkdGggLyBwaWN0dXJlSGVpZ2h0KSAqIGNhbnZhc0hlaWdodDtcbiAgICBoZWlnaHQgPSBjYW52YXNIZWlnaHQ7XG4gIH0gZWxzZSB7XG4gICAgd2lkdGggPSBjYW52YXNXaWR0aDtcbiAgICBoZWlnaHQgPSAocGljdHVyZUhlaWdodCAvIHBpY3R1cmVXaWR0aCkgKiBjYW52YXNXaWR0aDtcbiAgfVxuICByZXR1cm4ge1xuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFBpY3R1cmVJbmZvKHVybDogc3RyaW5nKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZTogYW55KSA9PiB7XG4gICAgd3guZ2V0SW1hZ2VJbmZvKHtcbiAgICAgIHNyYzogdXJsLFxuICAgICAgc3VjY2VzczogZGF0YSA9PiByZXNvbHZlKGRhdGEpLFxuICAgIH0pO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNlbGVjdFBpY3R1cmUoKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZTogYW55KSA9PiB7XG4gICAgd3guY2hvb3NlSW1hZ2Uoe1xuICAgICAgY291bnQ6IDEsXG4gICAgICBzb3VyY2VUeXBlOiBbJ2FsYnVtJywgJ2NhbWVyYSddLFxuICAgICAgc2l6ZVR5cGU6IFsnb3JpZ2luYWwnLCAnY29tcHJlc3NlZCddLFxuICAgICAgc3VjY2VzczogKHJlcykgPT4ge1xuICAgICAgICBpZiAocmVzLnRlbXBGaWxlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgZ2V0UGljdHVyZUluZm8ocmVzLnRlbXBGaWxlc1swXS5wYXRoKS50aGVuKChpbmZvKSA9PiB7XG4gICAgICAgICAgICByZXNvbHZlKGluZm8pO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgIH0pO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZldGNoUGljdHVyZShwYXRoOiBzdHJpbmcpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlOiBhbnkpID0+IHtcbiAgICB3eC5kb3dubG9hZEZpbGUoe1xuICAgICAgdXJsOiBwYXRoLFxuICAgICAgc3VjY2VzczoocmVzKSA9PiB7XG4gICAgICAgIGlmIChyZXMuc3RhdHVzQ29kZSA9PT0gMjAwKSB7XG4gICAgICAgICAgcmVzb2x2ZShyZXMudGVtcEZpbGVQYXRoKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICB9KTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRQb3N0Y2FyZHMoKTogc3RyaW5nW10ge1xuICBsZXQgcG9zdGNhcmRzID0gW107XG4gIHRyeSB7XG4gICAgcG9zdGNhcmRzID0gd3guZ2V0U3RvcmFnZVN5bmMoJ3Bvc3RjYXJkcycpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy9cbiAgfVxuICByZXR1cm4gcG9zdGNhcmRzIHx8IFtdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0UG9zdGNhcmRzKHBhdGg6IHN0cmluZyk6IHZvaWQge1xuICBjb25zdCBwb3N0Y2FyZHMgPSBnZXRQb3N0Y2FyZHMoKTtcbiAgcG9zdGNhcmRzLnB1c2gocGF0aCk7XG4gIHRyeSB7XG4gICAgd3guc2V0U3RvcmFnZVN5bmMoJ3Bvc3RjYXJkcycsIHBvc3RjYXJkcyk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvL1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZm9ybWF0TnVtYmVyLFxuICBmb3JtYXRUaW1lLFxuICBjYWxQaWN0dXJlU2l6ZSxcbiAgZ2V0UGljdHVyZUluZm8sXG4gIHNlbGVjdFBpY3R1cmUsXG4gIGdldFBvc3RjYXJkcyxcbiAgc2V0UG9zdGNhcmRzLFxufTsiXX0=